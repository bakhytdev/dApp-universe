import { Injectable } from "@nestjs/common";
import { Command, Positional } from "nestjs-command";
import Web3 from "web3";
import * as readline from "readline-sync"; 

const web3 = new Web3(new Web3.providers.HttpProvider('https://eth-goerli.g.alchemy.com/v2/LghGiUNiAVBdYk2dN-ykVv4miDqD7zln'));

@Injectable()
export class T29 {

    /**
     *  npx nestjs-command t29:task1
     */
    @Command({
        command: 't29:task1',
        describe: 'Задача 29.1',
    })
    async T29_1() {
        console.log(await web3.eth.getBlockNumber());
    }

    /**
     *  npx nestjs-command t29:task2
     */
    @Command({
        command: 't29:task2',
        describe: 'Задача 29.2',
    })
    async T29_2() {
        let value = readline.question("address: ");
        
        console.log(value);

    }

    /**
     *  npx nestjs-command t29:task3
     */
    @Command({
        command: 't29:task3',
        describe: 'Задача 29.3',
    })
    async T29_3() {
        const address = readline.question("Enter address: ");
        
        const result = await web3.eth.getBalance(address);
        
        console.log(result);
        
    }
}

/**
 * Для выполнения этих заданий вам понадобится установить модуль, который позволяет считывать значения, введённые в терминале

Для установки пакета выполните в терминале команду
npm install readline-sync
Затем подключите модуль в коде программы
const readline = require('readline-sync');
Чтобы считать значения используйте код
let value = readline.question("Insert value: ");

Также рекомендуется пользоваться предоставленным шаблоном

Задача 1


Пришло время написать наш первый код с использованием web3

1. Зарегистрируйтесь на Alchemy и создайте там новый проект
2. Создайте новый web3 проект помощью Node js 
3. Напиште код, который подключается к блокчейну Ethereum, и выводит одно значение - номер последнего блока в блокчейне


Задача 2

Напишите программу, которая будет на вход получать одно значение - некоторый адрес аккаунта
Затем при помощи метода web3.utils.isAddress() будет определять правильный это адрес или нет
И выводить true или false

Задача 3

Напишите программу, которая
    • получает на вход одно значение - адрес аккаунта
    • выводит одно значение - баланс на этом адресе


Задача 4

Напишите программу, которая
    • получает на вход одно значение - адрес транзакции
    • и выводит атрибуты этой транзакции

Задача 5

Теперь научимся получать всю информацию о транзакциях в блокчейне!
Напишите программу, которая принимает на вход одно значение - хеш транзакции, а выводит следующую информацию:
    • кто отправитель
    • кто получатель
    • сколько переведено эфира
Формат вывода смотри ниже

Задача 6

Напишите программу, которая
    • получает на вход одно значение - номер блока
    • выводит информацию о всех транзакциях этого блока. То есть, из номера блока программа достаёт список хешей транзакций и выводит информацию о каждой из этих транзакций

Задача 7 

Отлично! Продолжим анализ сети
Напишите программу, которая поможет найти в блоке транзакцию, в которой отправлено самое большое количество эфира
Эта программа должна принимать на вход номер блока, а возвращать
    • Хэш искомой транзакции
    • Количество эфира, пересылаемого в этой транзакции

Задача 8

А теперь давайте немного усложним предыдущую задачу
Вам необходимо не только найти транзакцию с самым большим значением пересылаемого эфира, но и подробно выяснить, кто это такой богатый завёлся в нашей уютной тестовой сети.
Теперь ваша программа должна выводить следующую информацию:
    • Хэш транзакции
    • Сумму транзакции
    • Адрес кошелька отправителя
    • Баланс на кошельке отправителя
    • Адрес кошелька получателя
    • Баланс на кошельке получателя
 
Задача 9

К сожалению, в web3.js нет функции, которая могла бы вывести все транзакции, совершённые с определённого аккаунта
Придётся реализовать это самостоятельно
Напишите программу, которая
    • получает на вход три значения:
        ◦ адрес аккаунта
        ◦ номер блока - первого блока из диапазона
        ◦ номер блока - последнего блока из диапазона
    • а выводит список хешей всех транзакций, которые были совершены с указанного адреса в указанном диапазоне 
 */